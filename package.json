{
  "name": "xbrowsersync-app",
  "description": "The xBrowserSync client app.",
  "version": "1.4.0",
  "author": "xBrowserSync",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/xBrowserSync/App.git"
  },
  "bugs": {
    "url": "https://github.com/xBrowserSync/App/issues"
  },
  "dependencies": {
    "angular": "^1.7.4",
    "angular-animate": "^1.7.4",
    "angular-complexify": "^0.3.7",
    "angular-filter": "^0.5.17",
    "angular-hammer": "^2.2.0",
    "angular-sanitize": "^1.7.4",
    "base64-js": "^1.3.0",
    "bootstrap": "^3.3.7",
    "compare-versions": "^3.4.0",
    "crypto-js": "^3.1.9-1",
    "fastclick": "^1.0.6",
    "font-awesome": "^4.7.0",
    "hammerjs": "^2.0.8",
    "lzutf8": "^0.5.5",
    "ng-infinite-scroll": "^1.3.0",
    "qrious": "^4.0.0",
    "source-code-pro": "^2.30.1",
    "typeface-roboto-condensed": "0.0.54",
    "underscore": "^1.9.0"
  },
  "devDependencies": {
    "cross-env": "^5.2.0",
    "jshint": "^2.9.6",
    "minify": "^3.0.5",
    "node-sass": "^4.9.3",
    "npm-build-tools": "^2.2.5",
    "uglify-js": "^3.4.9"
  },
  "scripts": {
    "test": "npm run lint",
    "lint": "jshint .",
    "prebuild:chrome": "echo Clearing old build... & npm run clearprevbuild",
    "build:chrome": "echo Building chrome extension... & cross-env PLATFORM_PATH=platform/chrome npm run copyfiles && npm run commonbuildsteps",
    "postbuild:chrome": "npm run webextbuildsteps",
    "prebuild:firefox": "echo Clearing old build... & npm run clearprevbuild",
    "build:firefox": "echo Building firefox extension... & cross-env PLATFORM_PATH=platform/firefox npm run copyfiles && npm run commonbuildsteps",
    "postbuild:firefox": "npm run webextbuildsteps",
    "prebuild:android": "echo Clearing old build... & npm run clearprevbuild",
    "build:android": "echo Building Android app... & cross-env PLATFORM_PATH=platform/mobileapps npm run copyfiles && npm run commonbuildsteps",
    "postbuild:android": "npm run androidbuildsteps",
    "prebuild:ios": "echo Clearing old build... & npm run clearprevbuild",
    "build:ios": "echo Building iOS app... & cross-env PLATFORM_PATH=platform/mobileapps npm run copyfiles && npm run commonbuildsteps",
    "postbuild:ios": "npm run iosbuildsteps",
    "clearprevbuild": "n-clean build",
    "copyfiles": "cross-env-shell \"n-copy --source $PLATFORM_PATH --destination build \\\"*\\\" \\\"**/*\\\"\" && n-copy --source . --destination build \"app.html\" \"background.html\" \"css/*\" \"img/*\" \"views/*\" && n-copy --source node_modules/font-awesome/fonts --destination build/fonts/font-awesome \"**/*\" && n-copy --source node_modules/source-code-pro/WOFF2/OTF --destination build/fonts/source-code-pro \"**/*\" && n-copy --source node_modules/typeface-roboto-condensed/files --destination build/fonts/roboto-condensed \"**/*\"",
    "commonbuildsteps": "npm run compilecss && npm run bundlecss && npm run minifycryptojs && npm run bundleappscripts",
    "compilecss": "node-sass build/css/font-awesome.scss build/css/font-awesome.css -q & node-sass build/css/styles.scss build/css/styles.css -q & node-sass build/css/platform.scss build/css/platform.css -q",
    "bundlecss": "minify build/css/font-awesome.css node_modules/bootstrap/dist/css/bootstrap.min.css build/css/styles.css build/css/platform.css | n-pipe build/css/styles.min.css",
    "minifycryptojs": "minify node_modules/crypto-js/core.js node_modules/crypto-js/enc-base64.js node_modules/crypto-js/md5.js node_modules/crypto-js/evpkdf.js node_modules/crypto-js/cipher-core.js node_modules/crypto-js/aes.js | n-pipe build/js/crypto-js.min.js",
    "bundleappscripts": "uglifyjs --beautify --output build/js/app-scripts.min.js -- js/global.js js/utility.js js/httpInterceptor.js js/api.js js/bookmarks.js js/platform.js build/js/platformImplementation.js js/app.js build/js/app-initialise.js",
    "bundlewebextdependencies": "uglifyjs --beautify --output build/js/background-scripts.min.js -- js/ext.js js/global.js js/utility.js js/httpInterceptor.js js/api.js js/bookmarks.js js/platform.js build/js/platformImplementation.js js/background.js && n-concat node_modules/angular/angular.min.js node_modules/angular-animate/angular-animate.min.js node_modules/angular-complexify/build/angular-complexify.min.js node_modules/angular-sanitize/angular-sanitize.min.js node_modules/ng-infinite-scroll/build/ng-infinite-scroll.min.js node_modules/angular-filter/dist/angular-filter.min.js node_modules/underscore/underscore-min.js build/js/crypto-js.min.js node_modules/lzutf8/build/production/lzutf8.min.js node_modules/base64-js/base64js.min.js node_modules/qrious/dist/qrious.min.js node_modules/compare-versions/index.js | n-pipe build/js/app-dependencies.min.js && n-concat node_modules/angular/angular.min.js node_modules/underscore/underscore-min.js build/js/crypto-js.min.js node_modules/lzutf8/build/production/lzutf8.min.js node_modules/base64-js/base64js.min.js node_modules/compare-versions/index.js | n-pipe build/js/background-dependencies.min.js",
    "webextbuildsteps": "npm run bundlewebextdependencies && n-concat build/js/background-dependencies.min.js build/js/background-scripts.min.js | n-pipe build/js/background.min.js && n-concat build/js/app-dependencies.min.js build/js/app-scripts.min.js | n-pipe build/js/app.min.js",
    "postwebextbuildsteps": "echo Build complete.",
    "bundlemobiledependencies": "n-concat node_modules/angular/angular.min.js node_modules/angular-animate/angular-animate.min.js node_modules/angular-complexify/build/angular-complexify.min.js node_modules/angular-sanitize/angular-sanitize.min.js node_modules/ng-infinite-scroll/build/ng-infinite-scroll.min.js node_modules/angular-filter/dist/angular-filter.min.js node_modules/underscore/underscore-min.js build/js/crypto-js.min.js node_modules/lzutf8/build/production/lzutf8.min.js node_modules/base64-js/base64js.min.js node_modules/hammerjs/hammer.min.js node_modules/angular-hammer/angular.hammer.min.js node_modules/fastclick/lib/fastclick.js node_modules/qrious/dist/qrious.min.js node_modules/compare-versions/index.js | n-pipe build/js/app-dependencies.min.js",
    "androidcordovabuild": "echo Building cordova project... & n-copy --source build --destination build/cordova/www --ignore cordova/** \"*\" \"**/*\" & n-copy --source build/cordova/InAppBrowser --destination build/cordova/platforms/android/src/org/apache/cordova/inappbrowser InAppBrowser.java && cd build/cordova && cordova build android",
    "androidbuildsteps": "npm run bundlemobiledependencies && n-concat build/js/app-dependencies.min.js build/js/app-scripts.min.js | n-pipe build/js/app.min.js && npm run androidcordovabuild",
    "postandroidbuildsteps": "echo Build complete.",
    "ioscordovabuild": "echo Building cordova project... & node-sass build/css/ios.scss build/css/ios.css -q && minify build/css/ios.css > build/css/ios.min.css && n-concat build/css/styles.min.css | n-pipe build/css/styles2.min.css && n-concat build/css/styles2.min.css build/css/ios.min.css | n-pipe build/css/styles.min.css && n-copy --source build --destination build/cordova/www --ignore cordova/** \"*\" \"**/*\" && n-copy --source build/cordova/addBookmark --destination build/cordova/platforms/ios/addBookmark \"*\" && n-copy --source build/cordova/InAppBrowser --destination build/cordova/platforms/ios/xBrowserSync/Plugins/cordova-plugin-inappbrowser CDVInAppBrowser.m && n-copy --source build/cordova/res/artwork/ios --destination build/cordova/platforms/ios/xBrowserSync/Resources iTunesArtwork && cd build/cordova && cordova build ios",
    "iosbuildsteps": "npm run bundlemobiledependencies && n-concat build/js/app-dependencies.min.js build/js/app-scripts.min.js | n-pipe build/js/app.min.js && npm run ioscordovabuild",
    "postiosbuildsteps": "echo Build complete."
  }
}
